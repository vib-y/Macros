
if _G.Enabled then return end
_G.Enabled = true

local CorrectAnimation

local function CheckIfRunning()
    for i,v in pairs(game.Players.LocalPlayer.Character.Humanoid.Animator:GetPlayingAnimationTracks()) do
        if v.Animation.AnimationId == "rbxassetid://18959775178" or v.Animation.AnimationId == "rbxassetid://134103570218892" or v.Animation.AnimationId == "rbxassetid://128853198998904" then
            if v.IsPlaying == true then
                return v
            end
        end
    end
    return false
end

local AnimTimPos = 0
local Push = false
local Key = nil

task.spawn(function()
    while task.wait() do
        CorrectAnimation = CheckIfRunning()
        if CorrectAnimation then
            AnimTimPos = (CorrectAnimation.TimePosition/CorrectAnimation.Length)
        end
    end
end)

local Old
local RemoteLoc = game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("imezx_warp@1.0.9"):WaitForChild("warp"):WaitForChild("Index"):WaitForChild("Event"):WaitForChild("Reliable")
Old = hookmetamethod(game, "__namecall", newcclosure(function(self, ...)
    local args = {...}
    local method = getnamecallmethod():lower()

    if not checkcaller() and self == RemoteLoc and method == "fireserver" then
        if args[2] then
            if args[2][1][1] == "Reply" then
                _G.Buffer = args[1]
                Push = true
                Key = args[2][1][2]

                return Old(self, ...)
            end
        end
        return Old(self, ...)
    else
        return Old(self, ...)
    end
end))


while task.wait() do
    if _G.Buffer then
        if Push then
            Push = false
            repeat task.wait() until AnimTimPos > _G.Time
            local Multi = _G.Multi
            local Buffer = _G.Buffer

            for i = 1, Multi do
                if AnimTimPos <= .99 then
                    local args = {
                        [1] = Buffer,
                        [2] = {
                            [1] = {
                                [1] = "Reply",
                                [2] = Key
                            }
                        }
                    }
                    
                    game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("imezx_warp@1.0.9"):WaitForChild("warp"):WaitForChild("Index"):WaitForChild("Event"):WaitForChild("Reliable"):FireServer(unpack(args))
                end
            end
        end
    end
end


