local CorrectAnimation

local function CheckIfRunning()
    for i,v in pairs(game.Players.LocalPlayer.Character.Humanoid.Animator:GetPlayingAnimationTracks()) do
        if v.Animation.AnimationId == "rbxassetid://18959775178" then
            if v.IsPlaying == true then
                return v
            end
        end
    end
    return false
end

local AnimTimPos = 0

task.spawn(function()
    while task.wait(.05) do
        CorrectAnimation = CheckIfRunning()
        if CorrectAnimation then
            AnimTimPos = (CorrectAnimation.TimePosition/CorrectAnimation.Length)
        end
    end
end)

local instanfunc = false
local fargs = nil

task.spawn(function()
    while task.wait() do
        if instanfunc then
            repeat task.wait() until AnimTimPos > _G.AnimTime
            instanfunc = false
            for i = 1, 10 do
                game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("imezx_warp@1.0.9"):WaitForChild("warp"):WaitForChild("Index"):WaitForChild("Event"):WaitForChild("Reliable"):FireServer(unpack(fargs))
                print(i, unpack(fargs))
            end
        end
    end
end)

local Old
local RemoteLoc = game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("imezx_warp@1.0.9"):WaitForChild("warp"):WaitForChild("Index"):WaitForChild("Event"):WaitForChild("Reliable")
Old = hookmetamethod(game, "__namecall", newcclosure(function(self, ...)
    local args = {...}
    local method = getnamecallmethod():lower()

    if not checkcaller() and self == RemoteLoc and method == "fireserver" then
        if args[2] then
            if args[2][1][1] == "Reply" then
                instanfunc = true
                fargs = args

                return Old(self, ...)
            end
        end
        return Old(self, ...)
    else
        return Old(self, ...)
    end
end))
